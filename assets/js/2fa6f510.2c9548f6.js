"use strict";(self.webpackChunkwin_32_site=self.webpackChunkwin_32_site||[]).push([[773],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=i,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4054:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:1},o="Basic concepts",l={unversionedId:"winrt-programming/basics",id:"winrt-programming/basics",title:"Basic concepts",description:"Overview",source:"@site/docs/winrt-programming/basics.md",sourceDirName:"winrt-programming",slug:"/winrt-programming/basics",permalink:"/docs/winrt-programming/basics",draft:!1,editUrl:"https://github.com/dart-windows/website/tree/main/docs/winrt-programming/basics.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"WinRT Programming",permalink:"/docs/category/winrt-programming"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Initializing the WinRT",id:"initializing-the-winrt",level:2},{value:"Basic example",id:"basic-example",level:2},{value:"Releasing WinRT objects",id:"releasing-winrt-objects",level:3}],c={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"basic-concepts"},"Basic concepts"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dart-windows/dartwinrt"},"dartwinrt")," provides an\nidiomatic Dart projection of modern Windows Runtime (WinRT) APIs using Dart\nFFI. This allows you to use WinRT APIs in your Dart applications, including\nFlutter apps with minimal effort."),(0,i.kt)("p",null,"There are a total of ",(0,i.kt)("inlineCode",{parentName:"p"},"18")," packages, each corresponding to a top-level WinRT\nnamespace. For example, the ",(0,i.kt)("a",{parentName:"p",href:"https://pub.dev/packages/windows_globalization"},"windows_globalization")," package contains the WinRT APIs from the\n",(0,i.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/uwp/api/windows.globalization"},"Windows.Globalization")," namespace."),(0,i.kt)("p",null,"To call WinRT APIs, you will typically import the packages that provide the\nspecific WinRT APIs required by your application. For example, to use the\n",(0,i.kt)("inlineCode",{parentName:"p"},"Calendar")," class from the ",(0,i.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/uwp/api/windows.globalization"},"Windows.Globalization")," namespace, you would import the ",(0,i.kt)("inlineCode",{parentName:"p"},"windows_globalization"),"\npackage as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:windows_globalization/windows_globalization.dart';\n")),(0,i.kt)("h2",{id:"initializing-the-winrt"},"Initializing the WinRT"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"dartwinrt")," automatically initializes the WinRT with a multi-threaded\napartment (MTA) as needed, so you typically don't need to take any additional\nsteps to use WinRT APIs."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Keep in mind that, if you need to call WinRT APIs that only work in a\nsingle-threaded apartment (STA), you must initialize the WinRT with a STA by\ncalling the ",(0,i.kt)("inlineCode",{parentName:"p"},"RoInitialize(RO_INIT_TYPE.RO_INIT_SINGLETHREADED)")," function.")),(0,i.kt)("h2",{id:"basic-example"},"Basic example"),(0,i.kt)("p",null,"Here is a basic example that demonstrates how to retrieve the current year from\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"Calendar")," class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:windows_globalization/windows_globalization.dart';\n\nvoid main() {\n    final calendar = Calendar(); // Create a Calendar object\n    print(calendar.year); // prints \"2023\"\n}\n")),(0,i.kt)("h3",{id:"releasing-winrt-objects"},"Releasing WinRT objects"),(0,i.kt)("p",null,"In general, releasing WinRT objects isn't something you need to worry about,\nbecause when the object becomes inaccessible to the program, the\n",(0,i.kt)("a",{parentName:"p",href:"https://api.dart.dev/stable/dart-core/Finalizer-class.html"},"Finalizer"),"\nautomatically releases it for you."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"If you are manually managing the lifetime of an object, such as by calling the\n",(0,i.kt)("inlineCode",{parentName:"p"},".detach()")," method, then it is important to ensure that you release it properly\nby calling the ",(0,i.kt)("inlineCode",{parentName:"p"},".release()")," method. Additionally, you should free up the memory\nthat was allocated for the object by calling the ",(0,i.kt)("inlineCode",{parentName:"p"},"free()")," helper function as\nfollows:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"calendar.release(); // Release the WinRT object\nfree(calendar.ptr); // Release the allocated memory for the object\n")),(0,i.kt)("p",{parentName:"admonition"},"This is necessary to prevent memory leaks and ensure that the memory used by\nthe object is properly released.")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"It is important to include this code as part of a ",(0,i.kt)("inlineCode",{parentName:"p"},"try")," / ",(0,i.kt)("inlineCode",{parentName:"p"},"finally")," block to\nensure that the object is released properly, even if an exception is thrown\nduring the execution of your code.")))}d.isMDXComponent=!0}}]);