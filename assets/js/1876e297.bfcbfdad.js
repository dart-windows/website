"use strict";(self.webpackChunkwin_32_site=self.webpackChunkwin_32_site||[]).push([[557],{907:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=e(5893),a=e(1151);const r={sidebar_position:1},s="Basic concepts",o={id:"win32-programming/basics",title:"Basic concepts",description:"Calling native libraries with FFI",source:"@site/docs/win32-programming/basics.md",sourceDirName:"win32-programming",slug:"/win32-programming/basics",permalink:"/docs/win32-programming/basics",draft:!1,unlisted:!1,editUrl:"https://github.com/dart-windows/website/tree/main/docs/win32-programming/basics.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"Win32 Programming",permalink:"/docs/category/win32-programming"},next:{title:"Win32 functions",permalink:"/docs/win32-programming/functions"}},c={},d=[{value:"Calling native libraries with FFI",id:"calling-native-libraries-with-ffi",level:2}];function l(n){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"basic-concepts",children:"Basic concepts"}),"\n",(0,t.jsx)(i.h2,{id:"calling-native-libraries-with-ffi",children:"Calling native libraries with FFI"}),"\n",(0,t.jsx)(i.p,{children:"The Windows API was originally written with C developers in mind. As a result,\nmany of the conventions are designed around the characteristics and capabilities\nof the C runtime. Fortunately, the wide popularity of C means that many\nlanguages, including Dart, have good support for calling C code and handling C\ncoding conventions."}),"\n",(0,t.jsxs)(i.p,{children:["In Dart, the primary means of calling C code is FFI, which stands for Foreign\nFunction Interface. Dart supplies both a library,\n",(0,t.jsx)(i.a,{href:"https://api.dart.dev/stable/dart-ffi/dart-ffi-library.html",children:(0,t.jsx)(i.code,{children:"dart:ffi"})}),",\nand a package, ",(0,t.jsx)(i.a,{href:"https://pub.dev/packages/ffi",children:(0,t.jsx)(i.code,{children:"package:ffi"})}),", which together\nsupply useful low-level functions and helpers."]}),"\n",(0,t.jsx)(i.p,{children:"To call FFI features, you will typically import both the library and the package\nfrom your code, along with the Win32 package itself, as follows:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-dart",children:"import 'dart:ffi';\n\nimport 'package:ffi/ffi.dart';\nimport 'package:win32/win32.dart';\n"})}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsxs)(i.p,{children:["Don't forget to add a dependency to the ",(0,t.jsx)(i.code,{children:"ffi"})," and ",(0,t.jsx)(i.code,{children:"win32"})," packages in your\n",(0,t.jsx)(i.code,{children:"pubspec.yaml"}),"."]})})]})}function p(n={}){const{wrapper:i}={...(0,a.a)(),...n.components};return i?(0,t.jsx)(i,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},1151:(n,i,e)=>{e.d(i,{Z:()=>o,a:()=>s});var t=e(7294);const a={},r=t.createContext(a);function s(n){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function o(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),t.createElement(r.Provider,{value:i},n.children)}}}]);