"use strict";(self.webpackChunkwin_32_site=self.webpackChunkwin_32_site||[]).push([[557],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(t),m=i,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return t?r.createElement(f,o(o({ref:n},s),{},{components:t})):r.createElement(f,o({ref:n},s))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:i,o[1]=c;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9372:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const a={sidebar_position:1},o="Basic concepts",c={unversionedId:"win32-programming/basics",id:"win32-programming/basics",title:"Basic concepts",description:"Calling native libraries with FFI",source:"@site/docs/win32-programming/basics.md",sourceDirName:"win32-programming",slug:"/win32-programming/basics",permalink:"/docs/win32-programming/basics",draft:!1,editUrl:"https://github.com/dart-windows/website/tree/main/docs/win32-programming/basics.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"win32DocSidebar",previous:{title:"Win32 Programming",permalink:"/docs/category/win32-programming"},next:{title:"Calling functions",permalink:"/docs/win32-programming/functions"}},l={},p=[{value:"Calling native libraries with FFI",id:"calling-native-libraries-with-ffi",level:2}],s={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(u,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"basic-concepts"},"Basic concepts"),(0,i.kt)("h2",{id:"calling-native-libraries-with-ffi"},"Calling native libraries with FFI"),(0,i.kt)("p",null,"The Windows API was originally written with C developers in mind. As a result,\nmany of the conventions are designed around the characteristics and capabilities\nof the C runtime. Fortunately, the wide popularity of C means that many\nlanguages, including Dart, have good support for calling C code and handling C\ncoding conventions."),(0,i.kt)("p",null,"In Dart, the primary means of calling C code is FFI, which stands for Foreign\nFunction Interface. Dart supplies both a library, ",(0,i.kt)("inlineCode",{parentName:"p"},"dart:ffi"),", and a package,\n`package:ffi', which together supply useful low-level functions and helpers."),(0,i.kt)("p",null,"To call FFI features, you will typically import both the library and the package\nfrom your code, along with the Win32 package itself, as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"import 'dart:ffi';\n\nimport 'package:ffi/ffi.dart';\nimport 'package:win32/win32.dart';\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Don't forget to add a dependency to the ",(0,i.kt)("inlineCode",{parentName:"p"},"ffi")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"win32")," packages in your\n",(0,i.kt)("inlineCode",{parentName:"p"},"pubspec.yaml"),".")))}d.isMDXComponent=!0}}]);