"use strict";(self.webpackChunkwin_32_site=self.webpackChunkwin_32_site||[]).push([[671],{7876:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=e(5893),o=e(1151);const r={sidebar_position:1},s="Introduction to Dart | Windows",a={id:"intro",title:"Introduction to Dart | Windows",description:"Dart | Windows is a suite of packages for working with Windows from the Dart",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/dart-windows/website/tree/main/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",next:{title:"Win32 Programming",permalink:"/docs/category/win32-programming"}},d={},c=[{value:"Why write Windows code with Dart?",id:"why-write-windows-code-with-dart",level:2}];function h(t){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"introduction-to-dart--windows",children:"Introduction to Dart | Windows"}),"\n",(0,i.jsx)(n.p,{children:"Dart | Windows is a suite of packages for working with Windows from the Dart\nprogramming language. It aims to make it easy to write Dart code that can\naccess Windows hardware and system services, using traditional Win32, COM, or\nWindows Runtime API calls."}),"\n",(0,i.jsx)(n.h2,{id:"why-write-windows-code-with-dart",children:"Why write Windows code with Dart?"}),"\n",(0,i.jsx)(n.p,{children:"There are a number of scenarios where these packages might be useful to you. A\nfew examples:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"You're a Flutter developer writing an app that will run on Windows, and you\nneed to access a hardware accessory such as a gamepad. Or you want to read a\nsetting from the Windows registry."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"You're writing a new cross-platform package, and you want to write the\nWindows implementation."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["You're writing a command-line utility with Dart, and you want to access more\nfile APIs than the ",(0,i.jsx)(n.code,{children:"dart:io"})," package directly offers."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"You're writing an app that needs to integrate with other existing Windows\nlibraries that have published metadata."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The purpose of the Dart | Windows packages is to provide access to the\nunderlying Windows APIs from Dart code without having to directly map\nAPI conventions to Dart."})]})}function l(t={}){const{wrapper:n}={...(0,o.a)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(h,{...t})}):h(t)}},1151:(t,n,e)=>{e.d(n,{Z:()=>a,a:()=>s});var i=e(7294);const o={},r=i.createContext(o);function s(t){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function a(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:s(t.components),i.createElement(r.Provider,{value:n},t.children)}}}]);