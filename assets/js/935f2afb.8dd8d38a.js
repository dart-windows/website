"use strict";(self.webpackChunkwin_32_site=self.webpackChunkwin_32_site||[]).push([[53],{1109:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"win32DocSidebar":[{"type":"link","label":"Introduction to Dart | Windows","href":"/docs/intro","docId":"intro"},{"type":"category","label":"Win32 Programming","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic concepts","href":"/docs/win32-programming/basics","docId":"win32-programming/basics"},{"type":"link","label":"Managing memory","href":"/docs/win32-programming/memory","docId":"win32-programming/memory"},{"type":"link","label":"Types in Win32","href":"/docs/win32-programming/types","docId":"win32-programming/types"},{"type":"link","label":"Calling functions","href":"/docs/win32-programming/functions","docId":"win32-programming/functions"},{"type":"link","label":"Using Win32 structs from Dart","href":"/docs/win32-programming/structs","docId":"win32-programming/structs"}],"href":"/docs/category/win32-programming"},{"type":"category","label":"COM Programming","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using COM from Dart","href":"/docs/com-programming/basics","docId":"com-programming/basics"},{"type":"link","label":"Using strings in COM","href":"/docs/com-programming/strings","docId":"com-programming/strings"}],"href":"/docs/category/com-programming"}]},"docs":{"com-programming/basics":{"id":"com-programming/basics","title":"Using COM from Dart","description":"Since the Win32 package primarily focuses on providing a lightweight wrapper for","sidebar":"win32DocSidebar"},"com-programming/strings":{"id":"com-programming/strings","title":"Using strings in COM","description":"Most COM interfaces use regular C strings, which are allocated and used using","sidebar":"win32DocSidebar"},"intro":{"id":"intro","title":"Introduction to Dart | Windows","description":"Dart | Windows is a suite of packages for working with Windows from the Dart","sidebar":"win32DocSidebar"},"win32-programming/basics":{"id":"win32-programming/basics","title":"Basic concepts","description":"Calling native libraries with FFI","sidebar":"win32DocSidebar"},"win32-programming/functions":{"id":"win32-programming/functions","title":"Calling functions","description":"Win32 functions are exposed through package:win32 as global Dart functions, so","sidebar":"win32DocSidebar"},"win32-programming/memory":{"id":"win32-programming/memory","title":"Managing memory","description":"Dart is a garbage-collected language. When you create objects (e.g. allocating a","sidebar":"win32DocSidebar"},"win32-programming/structs":{"id":"win32-programming/structs","title":"Using Win32 structs from Dart","description":"Win32 programming frequently uses C structs to pass data between functions.","sidebar":"win32DocSidebar"},"win32-programming/types":{"id":"win32-programming/types","title":"Types in Win32","description":"Integer types","sidebar":"win32DocSidebar"}}}')}}]);