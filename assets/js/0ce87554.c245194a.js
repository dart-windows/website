"use strict";(self.webpackChunkwin_32_site=self.webpackChunkwin_32_site||[]).push([[578],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),g=a,d=m["".concat(s,".").concat(g)]||m[g]||u[g]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2340:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},i="Native memory management",l={unversionedId:"win32-programming/memory",id:"win32-programming/memory",title:"Native memory management",description:"Dart is a garbage-collected language. When you create objects (e.g. allocating a",source:"@site/docs/win32-programming/memory.md",sourceDirName:"win32-programming",slug:"/win32-programming/memory",permalink:"/docs/win32-programming/memory",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/win32-programming/memory.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"win32DocSidebar",previous:{title:"Basic concepts",permalink:"/docs/win32-programming/basics"}},s={},c=[{value:"Allocating memory with Dart",id:"allocating-memory-with-dart",level:2},{value:"Allocating strings",id:"allocating-strings",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"native-memory-management"},"Native memory management"),(0,a.kt)("p",null,"Dart is a garbage-collected language. When you create objects (e.g. allocating a\nstring to a variable, or instantiating a class), Dart is responsible for\nallocating memory for them, as well ensuring that the memory used is freed when\nthose objects are no longer in use."),(0,a.kt)("p",null,"However, when you're working with libraries through FFI, only primitive values\n(such as integers) can be passed directly through to the native code being\ncalled. For other types, such as strings and data structures, you have to take\nresponsibility for allocating memory and freeing it up when it is no longer\nused."),(0,a.kt)("h2",{id:"allocating-memory-with-dart"},"Allocating memory with Dart"),(0,a.kt)("p",null,"TBD"),(0,a.kt)("h2",{id:"allocating-strings"},"Allocating strings"),(0,a.kt)("p",null,"Win32 APIs as projected by Dart typically assume a 16-bit Unicode encoding,\nwhere each character is represented by 2 bytes. The Dart FFI package makes it\neasy to copy a Dart-allocated String to native memory, where it can be passed to\nWin32 APIs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"    final verb = 'open'.toNativeUtf16();\n    final process = 'notepad.exe'.toNativeUtf16();\n    ShellExecute(0, verb, process, nullptr, nullptr, SW_SHOW);\n\n    // Do something\n\n    free(verb);\n    free(process);\n")),(0,a.kt)("p",null,"In this example, ",(0,a.kt)("inlineCode",{parentName:"p"},"verb")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"process")," are of type ",(0,a.kt)("inlineCode",{parentName:"p"},"Pointer<Utf16>"),", which\nrepresents a pointer to native memory. The allocated memory includes two bytes\nfor every character in ",(0,a.kt)("inlineCode",{parentName:"p"},"dartText"),", plus a final null-termination character\n(",(0,a.kt)("inlineCode",{parentName:"p"},"\\x00"),")."),(0,a.kt)("p",null,"If you want to create a new string, Win32 provides a simple function ",(0,a.kt)("inlineCode",{parentName:"p"},"wsalloc"),",\nwhich allocates the necessary storage. This is particularly useful when you wish\nto ",(0,a.kt)("em",{parentName:"p"},"receive")," a string from Windows."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"    final textLength = GetWindowTextLength(hwndEdit);\n    final buffer = wsalloc(textLength); // allocates (textLength * 2) bytes\n    GetWindowText(hWnd, buffer, textLength);\n")),(0,a.kt)("p",null,"The returned value can be converted back to a Dart string using an extension\nmethod on ",(0,a.kt)("inlineCode",{parentName:"p"},"Pointer<Utf16>"),", as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"    print(buffer.toDartString());\n")))}u.isMDXComponent=!0}}]);